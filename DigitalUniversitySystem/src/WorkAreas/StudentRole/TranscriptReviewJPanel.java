/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package WorkAreas.StudentRole;
import Business.Business;
import Business.CourseSchedule.CourseLoad;
import Business.CourseSchedule.SeatAssignment;
import Business.Profiles.StudentProfile;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jim.hsieh
 */
public class TranscriptReviewJPanel extends javax.swing.JPanel {

    Business business;
    StudentProfile student;
    JPanel CardSequencePanel;

    /**
     * Creates new form TranscriptReviewJPanel
     */
    public TranscriptReviewJPanel(Business bz, StudentProfile sp, JPanel panel) {
        initComponents();
        this.business = bz;
        this.student = sp;
        this.CardSequencePanel = panel;
    
        populateTranscriptTable();
        displaySummary();
    }
     private void populateTranscriptTable() {
        DefaultTableModel model = (DefaultTableModel) tblAcademicTranscript.getModel();
        model.setRowCount(0);
        
        // 獲取所有學期的課程記錄
        HashMap<String, CourseLoad> courseLoadMap = student.getTranscript().getCourseloadlist();
        
        // 按學期顯示
        for (String semester : courseLoadMap.keySet()) {
            CourseLoad cl = courseLoadMap.get(semester);
            
            // 添加學期分隔行
            model.addRow(new Object[]{
                "===== " + semester + " =====", "", "", "", ""
            });
            
            // 添加該學期的所有課程
            ArrayList<SeatAssignment> seats = cl.getSeatAssignments();
            for (SeatAssignment sa : seats) {
                String courseNumber = sa.getCourseOffer().getCourseNumber();
                String courseName = sa.getCourseOffer().getSubjectCourse().getCourseName();
                int credits = sa.getCreditHours();
                String grade = sa.getLetterGrade() != null ? sa.getLetterGrade() : "N/A";
                double gpa = sa.getGPA();
                
                model.addRow(new Object[]{
                    courseNumber,
                    courseName,
                    credits,
                    grade,
                    String.format("%.2f", gpa)
                });
            }
            
            // 添加該學期小計
            model.addRow(new Object[]{
                "",
                "Semester Total:",
                cl.getTotalCredits(),
                "",
                cl.getAverageGPA()
            });
            
            // 空行分隔
            model.addRow(new Object[]{"", "", "", "", ""});
        }
    }
    
    private void displaySummary() {
        // 計算累計 GPA 和總學分
        ArrayList<SeatAssignment> allCourses = student.getCourseList();
        
        double totalGradePoints = 0;
        int totalCredits = 0;
        
        for (SeatAssignment sa : allCourses) {
            if (sa.getLetterGrade() != null) {
                totalGradePoints += sa.getGPA() * sa.getCreditHours();
                totalCredits += sa.getCreditHours();
            }
        }
        
        double cumulativeGPA = totalCredits > 0 ? totalGradePoints / totalCredits : 0;
        
        lblTotalCredits.setText("Total Credits:" + totalCredits);
        lblCumulative.setText(String.format("Cumulative GPA:%.2f", cumulativeGPA));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        lblAcademicTranscript = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAcademicTranscript = new javax.swing.JTable();
        lblTotalCredits = new javax.swing.JLabel();
        lblCumulative = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, -1, -1));

        lblAcademicTranscript.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblAcademicTranscript.setText("Academic Transcript");
        add(lblAcademicTranscript, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, 240, -1));

        tblAcademicTranscript.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course Code", "Course Name", "Credits", "Grade", "GPA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblAcademicTranscript);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, 760, 270));

        lblTotalCredits.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        lblTotalCredits.setText("Total Credits:0");
        add(lblTotalCredits, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 470, 110, -1));

        lblCumulative.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        lblCumulative.setText("Cumulative GPA:0.00");
        add(lblCumulative, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 470, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardSequencePanel.remove(this);
    ((java.awt.CardLayout) CardSequencePanel.getLayout()).previous(CardSequencePanel);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAcademicTranscript;
    private javax.swing.JLabel lblCumulative;
    private javax.swing.JLabel lblTotalCredits;
    private javax.swing.JTable tblAcademicTranscript;
    // End of variables declaration//GEN-END:variables
}
