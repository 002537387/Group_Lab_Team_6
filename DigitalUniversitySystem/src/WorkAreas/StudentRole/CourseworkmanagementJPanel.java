/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package WorkAreas.StudentRole;
import Business.Profiles.StudentProfile;
import Business.CourseSchedule.SeatAssignment;
import Business.CourseSchedule.Assignment;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
/**
 *
 * @author jim.hsieh
 */
public class CourseworkmanagementJPanel extends javax.swing.JPanel {

    JPanel CardSequencePanel;
    StudentProfile student;
    /**
     * Creates new form CourseworkmanagementJPanel
     */
    public CourseworkmanagementJPanel(JPanel CardSequencePanel, StudentProfile student) {
        this.student = student;
        this.CardSequencePanel = CardSequencePanel;
        initComponents();
        loadCourses();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblCourse = new javax.swing.JLabel();
        cmbCourse = new javax.swing.JComboBox<>();
        lblAverage = new javax.swing.JLabel();
        lblProgress = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCourse = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnSubmit = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblTitle.setText("Coursework Management");
        add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, 220, -1));

        lblCourse.setText("Course:");
        add(lblCourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 80, 90, -1));

        cmbCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCourseActionPerformed(evt);
            }
        });
        add(cmbCourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 80, 130, -1));

        lblAverage.setText("Average:0%");
        add(lblAverage, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 170, 100, -1));

        lblProgress.setText("Progress:0/0");
        add(lblProgress, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, 90, -1));

        tblCourse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title", "Due Date", "Status", "Score"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCourse);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 740, 200));

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 470, -1, -1));

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 470, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        submitAssignment();
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardSequencePanel.remove(this);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void cmbCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCourseActionPerformed
        // TODO add your handling code here:
        loadAssignments();
    }//GEN-LAST:event_cmbCourseActionPerformed

    private void loadCourses() {
        cmbCourse.removeAllItems();
        
        for (SeatAssignment sa : student.getCurrentCourseLoad().getSeatAssignments()) {
            cmbCourse.addItem(sa.toString());
            
           
        }
        
        if (cmbCourse.getItemCount() > 0) {
            loadAssignments();
        }
    }
    
    private void loadAssignments() {
        int index = cmbCourse.getSelectedIndex();
        if (index < 0) return;
        
        SeatAssignment sa = student.getCurrentCourseLoad().getSeatAssignments().get(index);
        
        DefaultTableModel model = (DefaultTableModel) tblCourse.getModel();
        model.setRowCount(0);
        
        for (Assignment a : sa.getAssignments()) {
            Object[] row = new Object[4];
            row[0] = a.getTitle();
            row[1] = a.getDueDate();
            row[2] = a.getStatus();
            row[3] = a.getScore() + "/" + a.getMaxScore();
            model.addRow(row);
        }
        
        lblProgress.setText("Progress: " + sa.getAssignmentProgress());
        lblAverage.setText("Average: " + String.format("%.0f%%", sa.getAssignmentAverageScore()));
    }
    
    private void submitAssignment() {
        int row = tblCourse.getSelectedRow();
    if (row < 0) {
        JOptionPane.showMessageDialog(this, "Please select an assignment!");
        return;
    }
    
    int index = cmbCourse.getSelectedIndex();
    SeatAssignment sa = student.getCurrentCourseLoad().getSeatAssignments().get(index);
    Assignment a = sa.getAssignments().get(row);
    
    if (a.isSubmitted()) {
        JOptionPane.showMessageDialog(this, "Already submitted!");
        return;
    }
    
    String content = JOptionPane.showInputDialog(this, 
        "Enter submission for: " + a.getTitle());
    
    if (content != null && !content.trim().isEmpty()) {
        a.submit(content);
        

        
        JOptionPane.showMessageDialog(this, 
            "Submitted successfully!\n");
        
        loadAssignments();
    }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> cmbCourse;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAverage;
    private javax.swing.JLabel lblCourse;
    private javax.swing.JLabel lblProgress;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblCourse;
    // End of variables declaration//GEN-END:variables
}
