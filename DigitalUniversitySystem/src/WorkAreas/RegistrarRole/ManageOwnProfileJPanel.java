/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package WorkAreas.RegistrarRole;

import Business.Business;
import Business.Person.Person;
import Business.Profiles.RegistrarProfile;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author wanyuchiu
 */

public class ManageOwnProfileJPanel extends javax.swing.JPanel {

    JPanel CardSequencePanel;
    Business business;
    RegistrarProfile registrar;
    /**
     * Creates new form ManageOwnProfileJPanel
     */
    public ManageOwnProfileJPanel(Business bz, JPanel jp,RegistrarProfile rp) {
         business = bz;
         this.CardSequencePanel = jp;
         this.registrar = rp;
         
         initComponents();
          // 載入當前 Registrar 的資料
         loadRegistrarProfile();
        
        // 設置 Name 欄位為唯讀（灰色顯示）
         txtRName.setEditable(false);
    }
  
   
    /**
     * Load existing profile data into form fields
     */
    
   
    
    
     private void updateTable() {
         
        DefaultTableModel model = (DefaultTableModel) tblProfile.getModel();
        model.setRowCount(0); // 清空表格
        
        Person person = registrar.getPerson();
        
        Object[] row = new Object[5];
        row[0] = person.getName();
        row[1] = registrar.getEmail() != null ? registrar.getEmail() : "";
        row[2] = registrar.getPhone() != null ? registrar.getPhone() : "";
        row[3] = registrar.getOffice() != null ? registrar.getOffice() : "";
        row[4] = registrar.getOfficeHours() != null ? registrar.getOfficeHours() : "";
        
        model.addRow(row);
    }
    
     
    private void loadRegistrarProfile() {
        if (registrar == null || registrar.getPerson() == null) {
            JOptionPane.showMessageDialog(this,
                "Registrar profile not found!",
                "Error",
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Person person = registrar.getPerson();
        
        // 填充欄位
        txtRName.setText(person.getName());
        txtEmail.setText(registrar.getEmail());
        txtPhone.setText(registrar.getPhone());
        txtOffice.setText(registrar.getOffice());
        txtOfficeHours.setText(registrar.getOfficeHours());
        
        // 更新表格顯示
        updateTable();
    }
           
            /*
           // Step 3: Put those information into registrar
            registrar.setRName(rName);
            registrar.setEmail(Email);
            registrar.setPhone(Phone);
            registrar.setOffice(Office);
            registrar.setOfficeHours(OfficeHours);
            /*
        
            Show success message
             JOptionPane.showMessageDialog(this,  "Profile updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
    }
   
        /*
        try {
            // Update contact information
            registrar.setEmail(txtEmail.getText());
            registrar.setPhone(txtPhone.getText());
            registrar.setOffice(txtOffice.getText());
            
            // Update office hours
            registrar.setOfficeHours(txtOfficeHours.getText());
            
            System.out.print("okay1");
            // Show success message
            JOptionPane.showMessageDialog(this, 
                "Profile updated successfully!", 
                "Success", 
                JOptionPane.INFORMATION_MESSAGE);
                
        } catch (Exception e) {
            // Show error message if save fails
            JOptionPane.showMessageDialog(this, 
                "Error updating profile: " + e.getMessage(), 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
       */
    
    
   
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
             
        
    
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtRName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtOffice = new javax.swing.JTextField();
        txtOfficeHours = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProfile = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();

        jLabel1.setText("Email");

        jLabel2.setText("Phone:");

        jLabel3.setText("Name:");

        txtRName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRNameActionPerformed(evt);
            }
        });

        jLabel4.setText("Office:");

        jLabel5.setText("Office Hour:");

        txtOfficeHours.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOfficeHoursActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel6.setText("OWN Profile");

        tblProfile.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Email", "Phone", "Office", "Office Hour"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProfile);

        btnBack.setText("<<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(58, 58, 58)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtRName, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                                    .addComponent(txtEmail)
                                    .addComponent(txtPhone)
                                    .addComponent(txtOffice)
                                    .addComponent(txtOfficeHours))
                                .addGap(67, 67, 67)
                                .addComponent(btnCreate)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdate))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(btnBack)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)))
                .addContainerGap(224, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtRName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addComponent(jLabel4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(btnBack))
                        .addGap(170, 170, 170)
                        .addComponent(txtOffice, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtOfficeHours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnUpdate)
                        .addComponent(btnCreate)))
                .addGap(82, 82, 82)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(192, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtRNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRNameActionPerformed

    private void txtOfficeHoursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOfficeHoursActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOfficeHoursActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
          // 獲取輸入值
        String name = txtRName.getText();
        String email = txtEmail.getText();
        String phone = txtPhone.getText();
        String office = txtOffice.getText();
        String officeHours = txtOfficeHours.getText();
        
        // 驗證輸入
        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(this,
                "Name cannot be empty!",
                "Validation Error",
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (email.isEmpty()) {
            JOptionPane.showMessageDialog(this,
                "Email cannot be empty!",
                "Validation Error",
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // 簡單的 Email 格式驗證
        if (!email.contains("@") || !email.contains(".")) {
            JOptionPane.showMessageDialog(this,
                "Please enter a valid email address!",
                "Validation Error",
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // 電話號碼驗證（可選）
        if (!phone.isEmpty() && !phone.matches("[0-9-()+ ]+")) {
            JOptionPane.showMessageDialog(this,
                "Please enter a valid phone number!",
                "Validation Error",
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            // 更新 RegistrarProfile 的資料
            registrar.setEmail(email);
            registrar.setPhone(phone);
            registrar.setOffice(office);
            registrar.setOfficeHours(officeHours);
            
            // 更新表格顯示
            updateTable();
            
            // 顯示成功消息
            JOptionPane.showMessageDialog(this,
                "Profile updated successfully!\n\n" +
                "Name: " + name + "\n" +
                "Email: " + email + "\n" +
                "Phone: " + phone + "\n" +
                "Office: " + office + "\n" +
                "Office Hours: " + officeHours,
                "Success",
                JOptionPane.INFORMATION_MESSAGE);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                "Failed to update profile: " + e.getMessage(),
                "Error",
                JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    
    
         //populateProfileTable();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardSequencePanel.remove(this);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).previous(CardSequencePanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
         // TODO add your handling code here:
          // 獲取輸入值
        String name = txtRName.getText();
        String email = txtEmail.getText();
        String phone = txtPhone.getText();
        String office = txtOffice.getText();
        String officeHours = txtOfficeHours.getText();
        
        // 驗證輸入
        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(this,
                "Name cannot be empty!",
                "Validation Error",
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (email.isEmpty()) {
            JOptionPane.showMessageDialog(this,
                "Email cannot be empty!",
                "Validation Error",
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // 簡單的 Email 格式驗證
        if (!email.contains("@") || !email.contains(".")) {
            JOptionPane.showMessageDialog(this,
                "Please enter a valid email address!",
                "Validation Error",
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // 電話號碼驗證（可選）
        if (!phone.isEmpty() && !phone.matches("[0-9-()+ ]+")) {
            JOptionPane.showMessageDialog(this,
                "Please enter a valid phone number!",
                "Validation Error",
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            // 更新 RegistrarProfile 的資料
            registrar.setEmail(email);
            registrar.setPhone(phone);
            registrar.setOffice(office);
            registrar.setOfficeHours(officeHours);
            
            // 更新表格顯示
            updateTable();
            
            // 顯示成功消息
            JOptionPane.showMessageDialog(this,
                "Profile save successfully!\n\n" +
                "Name: " + name + "\n" +
                "Email: " + email + "\n" +
                "Phone: " + phone + "\n" +
                "Office: " + office + "\n" +
                "Office Hours: " + officeHours,
                "Success",
                JOptionPane.INFORMATION_MESSAGE);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                "Failed to update profile: " + e.getMessage(),
                "Error",
                JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    
    
         //populateProfileTable();
                                            
    }//GEN-LAST:event_btnCreateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblProfile;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtOffice;
    private javax.swing.JTextField txtOfficeHours;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtRName;
    // End of variables declaration//GEN-END:variables
}
